{"ast":null,"code":"var _jsxFileName = \"/home/jobtkk/sougou-kanri2/client/src/Components/UpdatePassword.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { UPDATE_PASSWORD } from \"../Graphql/Mutation\";\nimport { useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction aqui() {}\n\nfunction UpdatePassword() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\"); // const [updatePassword, {loading, data, error }] = useMutation(UPDATE_PASSWORD);\n\n  const [updatePassword, {\n    error\n  }] = useMutation(UPDATE_PASSWORD, {\n    onCompleted: data => {\n      alert('ng'); // the response\n    },\n    onError: error => {\n      alert('aqui'); // the error if that is the case\n    }\n  });\n  /* if (error) {\n     alert(\"NG\");\n   }else{\n     console.log(data.updatePassword);\n   }\n   if(loading){\n     alert(\"Loading...\");\n     \n   }}*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username...\",\n      onChange: event => {\n        setUsername(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Current Password...\",\n      onChange: event => {\n        setCurrentPassword(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"New Password...\",\n      onChange: event => {\n        setNewPassword(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        updatePassword({\n          variables: {\n            username: username,\n            oldPassword: currentPassword,\n            newPassword: newPassword\n          }\n        });\n      },\n      children: \"UPDATE PASSWORD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdatePassword, \"JAZQkrmdqSDD1clmYX6I+U3mECY=\", false, function () {\n  return [useMutation];\n});\n\n_c = UpdatePassword;\nexport default UpdatePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePassword\");","map":{"version":3,"sources":["/home/jobtkk/sougou-kanri2/client/src/Components/UpdatePassword.tsx"],"names":["React","useState","UPDATE_PASSWORD","useMutation","aqui","UpdatePassword","username","setUsername","currentPassword","setCurrentPassword","newPassword","setNewPassword","updatePassword","error","onCompleted","data","alert","onError","event","target","value","variables","oldPassword"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;AAEA,SAASC,IAAT,GAAe,CAEd;;AAED,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C,CAHwB,CAKzB;;AAEC,QAAM,CAACW,cAAD,EAAiB;AAAEC,IAAAA;AAAF,GAAjB,IAA8BV,WAAW,CAACD,eAAD,EAC7C;AACEY,IAAAA,WAAW,EAAGC,IAAD,IAAU;AACrBC,MAAAA,KAAK,CAAC,IAAD,CAAL,CADqB,CACR;AACd,KAHH;AAIEC,IAAAA,OAAO,EAAGJ,KAAD,IAAW;AACnBG,MAAAA,KAAK,CAAC,MAAD,CAAL,CADmB,CACJ;AACf;AANH,GAD6C,CAA/C;AAWD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,aAFd;AAGE,MAAA,QAAQ,EAAGE,KAAD,IAAW;AACnBX,QAAAA,WAAW,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,WAAW,EAAC,qBAFd;AAGE,MAAA,QAAQ,EAAGF,KAAD,IAAW;AACnBT,QAAAA,kBAAkB,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YARF,eAeE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,WAAW,EAAC,iBAFd;AAGE,MAAA,QAAQ,EAAGF,KAAD,IAAW;AACnBP,QAAAA,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD;AALH;AAAA;AAAA;AAAA;AAAA,YAfF,eAuBE;AACE,MAAA,OAAO,EAAE,MAAM;AACbR,QAAAA,cAAc,CAAC;AACbS,UAAAA,SAAS,EAAE;AACTf,YAAAA,QAAQ,EAAEA,QADD;AAETgB,YAAAA,WAAW,EAAEd,eAFJ;AAGTE,YAAAA,WAAW,EAAEA;AAHJ;AADE,SAAD,CAAd;AAOD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF,eAoCE;AAAA;AAAA;AAAA;AAAA,YApCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD;;GAtEQL,c;UAO6BF,W;;;KAP7BE,c;AA2ET,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { UPDATE_PASSWORD } from \"../Graphql/Mutation\";\nimport { useMutation } from \"@apollo/client\";\n\nfunction aqui(){\n\n}\n\nfunction UpdatePassword() {\n  const [username, setUsername] = useState(\"\");\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n\n // const [updatePassword, {loading, data, error }] = useMutation(UPDATE_PASSWORD);\n\n  const [updatePassword, { error }] = useMutation(UPDATE_PASSWORD,\n    {\n      onCompleted: (data) => {\n        alert('ng'); // the response\n      },\n      onError: (error) => {\n       alert('aqui'); // the error if that is the case\n      },\n    }\n  );\n\n /* if (error) {\n    alert(\"NG\");\n  }else{\n    console.log(data.updatePassword);\n  }\n  if(loading){\n    alert(\"Loading...\");\n    \n  }}*/\n  \n  return (\n    <div>      \n      <input\n        type=\"text\"\n        placeholder=\"Username...\"\n        onChange={(event) => {\n          setUsername(event.target.value);\n        }}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Current Password...\"\n        onChange={(event) => {\n          setCurrentPassword(event.target.value);\n        }}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"New Password...\"\n        onChange={(event) => {\n          setNewPassword(event.target.value);\n        }}\n      />\n\n      <button\n        onClick={() => {\n          updatePassword({\n            variables: {\n              username: username,\n              oldPassword: currentPassword,\n              newPassword: newPassword,\n            },\n          });         \n        }}        \n      >\n        UPDATE PASSWORD\n      </button>\n      <br/>\n      \n    </div>\n   \n  );\n}\n\n\n  \n\nexport default UpdatePassword;"]},"metadata":{},"sourceType":"module"}