{"ast":null,"code":"var _jsxFileName = \"/home/jobtkk/sougou-kanri2/client/src/Components/ListOfUsers.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { GET_ALL_USERS } from \"../Graphql/Queries\";\nimport { useQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListOfUsers() {\n  _s();\n\n  const {\n    data,\n    error\n  } = useQuery(GET_ALL_USERS);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && data.getAllUsers.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", user.name, \" / \", user.username, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListOfUsers, \"jnKEiAG78WqeE0AS5/bjUCg4uK4=\", false, function () {\n  return [useQuery];\n});\n\n_c = ListOfUsers;\nexport default ListOfUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOfUsers\");","map":{"version":3,"sources":["/home/jobtkk/sougou-kanri2/client/src/Components/ListOfUsers.tsx"],"names":["React","GET_ALL_USERS","useQuery","ListOfUsers","data","error","getAllUsers","map","user","name","username"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBH,QAAQ,CAACD,aAAD,CAAhC;AACA,sBACE;AAAA,cACGG,IAAI,IACHA,IAAI,CAACE,WAAL,CAAiBC,GAAjB,CAAsBC,IAAD,IAAe;AAClC,0BACE;AAAA,mBACG,GADH,EAEGA,IAAI,CAACC,IAFR,SAEiBD,IAAI,CAACE,QAFtB,EAEgC,GAFhC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPD;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAfQP,W;UACiBD,Q;;;KADjBC,W;AAiBT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { GET_ALL_USERS } from \"../Graphql/Queries\";\nimport { useQuery } from \"@apollo/client\";\n\nfunction ListOfUsers() {\n  const { data, error } = useQuery(GET_ALL_USERS);\n  return (\n    <div>\n      {data &&\n        data.getAllUsers.map((user: any) => {\n          return (\n            <div>\n              {\" \"}\n              {user.name} / {user.username}{\" \"}\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default ListOfUsers;\n"]},"metadata":{},"sourceType":"module"}