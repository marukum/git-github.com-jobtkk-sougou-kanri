{"ast":null,"code":"var ActionNames;\n\n(function (ActionNames) {\n  ActionNames[\"INC\"] = \"counter/increment\";\n  ActionNames[\"DEC\"] = \"counter/decrement\";\n  ActionNames[\"FETCH_START\"] = \"counter/fetch_request_start\";\n  ActionNames[\"FETCH_FINISH\"] = \"counter/fetch_request_finish\";\n})(ActionNames || (ActionNames = {}));\n\nexport const incrementAmount = amount => ({\n  type: ActionNames.INC,\n  plusAmount: amount\n});\nexport const decrementAmount = amount => ({\n  type: ActionNames.DEC,\n  minusAmount: amount\n});\nexport const fetchRequestStart = () => ({\n  type: ActionNames.FETCH_START,\n  appAction: true\n});\nexport const fetchRequestFinish = () => ({\n  type: ActionNames.FETCH_FINISH,\n  appAction: true\n});\nconst initialState = {\n  num: 0,\n  loadingCount: 0\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionNames.INC:\n      return Object.assign({}, state, {\n        num: state.num + action.plusAmount\n      });\n\n    case ActionNames.DEC:\n      return Object.assign({}, state, {\n        num: state.num - action.minusAmount\n      });\n\n    case ActionNames.FETCH_START:\n      {\n        return Object.assign({}, state, {\n          loadingCount: state.loadingCount + 1\n        });\n      }\n\n    case ActionNames.FETCH_FINISH:\n      {\n        return Object.assign({}, state, {\n          loadingCount: state.loadingCount - 1\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/jobtkk/sougou-kanri2/client/src/Components/counter/module.ts"],"names":["ActionNames","incrementAmount","amount","type","INC","plusAmount","decrementAmount","DEC","minusAmount","fetchRequestStart","FETCH_START","appAction","fetchRequestFinish","FETCH_FINISH","initialState","num","loadingCount","reducer","state","action","Object","assign"],"mappings":"IAEKA,W;;WAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAWL,OAAO,MAAMC,eAAe,GAAIC,MAAD,KAAsC;AACnEC,EAAAA,IAAI,EAAEH,WAAW,CAACI,GADiD;AAEnEC,EAAAA,UAAU,EAAEH;AAFuD,CAAtC,CAAxB;AASP,OAAO,MAAMI,eAAe,GAAIJ,MAAD,KAAsC;AACnEC,EAAAA,IAAI,EAAEH,WAAW,CAACO,GADiD;AAEnEC,EAAAA,WAAW,EAAEN;AAFsD,CAAtC,CAAxB;AASP,OAAO,MAAMO,iBAAiB,GAAG,OAAgC;AAC/DN,EAAAA,IAAI,EAAEH,WAAW,CAACU,WAD6C;AAE/DC,EAAAA,SAAS,EAAE;AAFoD,CAAhC,CAA1B;AASP,OAAO,MAAMC,kBAAkB,GAAG,OAAiC;AACjET,EAAAA,IAAI,EAAEH,WAAW,CAACa,YAD+C;AAEjEF,EAAAA,SAAS,EAAE;AAFsD,CAAjC,CAA3B;AAeP,MAAMG,YAAyB,GAAG;AAChCC,EAAAA,GAAG,EAAE,CAD2B;AAEhCC,EAAAA,YAAY,EAAE;AAFkB,CAAlC;AAKA,eAAe,SAASC,OAAT,GAA2F;AAAA,MAA1EC,KAA0E,uEAApDJ,YAAoD;AAAA,MAAtCK,MAAsC;;AACxG,UAAQA,MAAM,CAAChB,IAAf;AACE,SAAKH,WAAW,CAACI,GAAjB;AACE,aAAOgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAACH,QAAAA,GAAG,EAAEG,KAAK,CAACH,GAAN,GAAYI,MAAM,CAACd;AAAzB,OAAzB,CAAP;;AACF,SAAKL,WAAW,CAACO,GAAjB;AACE,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAACH,QAAAA,GAAG,EAAEG,KAAK,CAACH,GAAN,GAAYI,MAAM,CAACX;AAAzB,OAAzB,CAAP;;AACF,SAAKR,WAAW,CAACU,WAAjB;AAA8B;AAC5B,eAAOU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAACF,UAAAA,YAAY,EAAEE,KAAK,CAACF,YAAN,GAAqB;AAApC,SAAzB,CAAP;AACD;;AACD,SAAKhB,WAAW,CAACa,YAAjB;AAA+B;AAC7B,eAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAACF,UAAAA,YAAY,EAAEE,KAAK,CAACF,YAAN,GAAqB;AAApC,SAAzB,CAAP;AACD;;AACD;AACE,aAAOE,KAAP;AAZJ;AAcD","sourcesContent":["import {Action} from 'redux'\n\nenum ActionNames {\n  INC = 'counter/increment',\n  DEC = 'counter/decrement',\n  FETCH_START = 'counter/fetch_request_start',\n  FETCH_FINISH = 'counter/fetch_request_finish'\n}\n\ninterface IncrementAction extends Action {\n  type: ActionNames.INC\n  plusAmount: number\n}\nexport const incrementAmount = (amount: number): IncrementAction => ({\n  type: ActionNames.INC,\n  plusAmount: amount\n})\n\ninterface DecrementAction extends Action {\n  type: ActionNames.DEC\n  minusAmount: number\n}\nexport const decrementAmount = (amount: number): DecrementAction => ({\n  type: ActionNames.DEC,\n  minusAmount: amount\n})\n\ninterface FetchRequestStartAction extends Action {\n  type: ActionNames.FETCH_START\n  appAction: boolean\n}\nexport const fetchRequestStart = (): FetchRequestStartAction => ({\n  type: ActionNames.FETCH_START,\n  appAction: true,\n})\n\ninterface FetchRequestFinishAction extends Action {\n  type: ActionNames.FETCH_FINISH\n  appAction: boolean\n}\nexport const fetchRequestFinish = (): FetchRequestFinishAction => ({\n  type: ActionNames.FETCH_FINISH,\n  appAction: true,\n})\n\nexport interface CounterState {\n  num: number\n  loadingCount: number\n}\n\nexport type CounterActions = IncrementAction\n  | DecrementAction\n  | FetchRequestStartAction\n  | FetchRequestFinishAction\n\nconst initialState:CounterState = {\n  num: 0,\n  loadingCount: 0\n}\n\nexport default function reducer(state: CounterState = initialState, action: CounterActions): CounterState {\n  switch (action.type) {\n    case ActionNames.INC:\n      return Object.assign({}, state, {num: state.num + action.plusAmount})\n    case ActionNames.DEC:\n      return Object.assign({}, state, {num: state.num - action.minusAmount})\n    case ActionNames.FETCH_START: {\n      return Object.assign({}, state, {loadingCount: state.loadingCount + 1})\n    }\n    case ActionNames.FETCH_FINISH: {\n      return Object.assign({}, state, {loadingCount: state.loadingCount - 1})\n    }\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}